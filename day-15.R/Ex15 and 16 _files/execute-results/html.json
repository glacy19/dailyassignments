{
  "hash": "e10c698e02c4d1d5be905d06744d0c01",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \" Daily Assignment 15 and 16\"\nauthor: \"Genesis Lacy\"\nsubtitle: \"ESS 330 Quantitative Reasoning\"\nformat: html\neditor: visual\n---\n\n\n\nBelow is the original code from Assignment 15:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n✔ broom        1.0.7     ✔ recipes      1.1.0\n✔ dials        1.3.0     ✔ rsample      1.2.1\n✔ dplyr        1.1.4     ✔ tibble       3.2.1\n✔ ggplot2      3.5.1     ✔ tidyr        1.3.1\n✔ infer        1.0.7     ✔ tune         1.2.1\n✔ modeldata    1.4.0     ✔ workflows    1.1.4\n✔ parsnip      1.2.1     ✔ workflowsets 1.1.0\n✔ purrr        1.0.2     ✔ yardstick    1.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Search for functions across packages at https://www.tidymodels.org/find/\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'palmerpenguins' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'palmerpenguins'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:modeldata':\n\n    penguins\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ranger)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'ranger' was built under R version 4.4.3\n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(123)\n\n(penguins_split <- initial_split(drop_na(penguins), prop = 0.7, strata = species))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<Training/Testing/Total>\n<232/101/333>\n```\n\n\n:::\n\n```{.r .cell-code}\n#> <Training/Testing/Total>\n#> <265/68/333>\npenguins_train  <- training(penguins_split)\npenguins_test   <- testing(penguins_split)\n\npenguin_folds <- vfold_cv(penguins_train, v = 10)\n\nprint(penguin_folds)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#  10-fold cross-validation \n# A tibble: 10 × 2\n   splits           id    \n   <list>           <chr> \n 1 <split [208/24]> Fold01\n 2 <split [208/24]> Fold02\n 3 <split [209/23]> Fold03\n 4 <split [209/23]> Fold04\n 5 <split [209/23]> Fold05\n 6 <split [209/23]> Fold06\n 7 <split [209/23]> Fold07\n 8 <split [209/23]> Fold08\n 9 <split [209/23]> Fold09\n10 <split [209/23]> Fold10\n```\n\n\n:::\n:::\n\n\n\nBelow is the code for the model setting and workflow for Assignment 16:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# defining multinominal logistic regression model, there are 3 species types\n\nmultinom_model <- multinom_reg() %>%\n  set_engine(\"nnet\") %>%\n  set_mode(\"classification\")\n\n# using default model which is nnet\nrand_forest_model <- rand_forest() %>%\n  set_engine(\"ranger\") %>%\n  set_mode(\"classification\")\n\npenguins_wf_Set <- workflow_set(\n  preproc = list(species ~ .),\n  models = list(multinom = multinom_model, rf = rand_forest_model))\n  \n# fit both models with the 10 fold cross validation, #fit_resamples is a function from tidymodels ecosystem, specicially in the workflows\n\npenguins_res <- penguins_wf_Set %>%\n  workflow_map(\"fit_resamples\",\n               resamples = penguin_folds, control = control_resamples(save_pred = TRUE))\n\n# saving metrics\npenguins_res_metrics <- collect_metrics(penguins_res)\n\n\n# compare\naccuracy_comparison <- penguins_res_metrics %>%\n  filter(.metric == \"accuracy\")\n\nprint(accuracy_comparison)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 9\n  wflow_id         .config  preproc model .metric .estimator  mean     n std_err\n  <chr>            <chr>    <chr>   <chr> <chr>   <chr>      <dbl> <int>   <dbl>\n1 formula_multinom Preproc… formula mult… accura… multiclass 0.983    10 0.00961\n2 formula_rf       Preproc… formula rand… accura… multiclass 0.983    10 0.00703\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}